# Generated by Django 5.1.4 on 2025-03-29 12:54

import base.models
import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='المعرف العالمي')),
                ('title', models.CharField(max_length=255, verbose_name='عنوان المزاد')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='الرابط المختصر')),
                ('description', models.TextField(blank=True, null=True, verbose_name='وصف المزاد')),
                ('auction_type', models.CharField(choices=[('public', 'عام'), ('private', 'خاص'), ('online', 'إلكتروني'), ('onsite', 'حضوري'), ('hybrid', 'مختلط')], default='online', max_length=50, verbose_name='نوع المزاد')),
                ('status', models.CharField(choices=[('draft', 'مسودة'), ('pending', 'قيد الانتظار'), ('active', 'مفتوح'), ('extended', 'ممدد'), ('closed', 'مغلق'), ('sold', 'مُباع'), ('cancelled', 'ملغي')], default='draft', max_length=20, verbose_name='حالة المزاد')),
                ('start_date', models.DateTimeField(verbose_name='تاريخ بدء المزاد')),
                ('end_date', models.DateTimeField(verbose_name='تاريخ انتهاء المزاد')),
                ('auto_extend', models.BooleanField(default=True, verbose_name='تمديد تلقائي')),
                ('extension_minutes', models.PositiveIntegerField(default=10, verbose_name='دقائق التمديد')),
                ('starting_price', models.DecimalField(decimal_places=2, max_digits=14, verbose_name='سعر البدء')),
                ('reserve_price', models.DecimalField(decimal_places=2, max_digits=14, verbose_name='السعر الاحتياطي')),
                ('min_bid_increment', models.DecimalField(decimal_places=2, default=100, max_digits=14, verbose_name='الحد الأدنى للزيادة')),
                ('deposit_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, verbose_name='مبلغ التأمين')),
                ('deposit_required', models.BooleanField(default=False, verbose_name='مطلوب تأمين')),
                ('buyer_premium_percent', models.DecimalField(decimal_places=2, default=5.0, max_digits=5, verbose_name='نسبة عمولة المشتري')),
                ('seller_commission_percent', models.DecimalField(decimal_places=2, default=2.5, max_digits=5, verbose_name='نسبة عمولة البائع')),
                ('current_bid', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, verbose_name='المزايدة الحالية')),
                ('winning_bid', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, verbose_name='المزايدة الفائزة')),
                ('end_reason', models.CharField(blank=True, max_length=100, null=True, verbose_name='سبب الإنهاء')),
                ('location_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='عنوان الموقع')),
                ('location', models.TextField(blank=True, null=True, verbose_name='الموقع الجغرافي')),
                ('location_details', models.TextField(blank=True, null=True, verbose_name='تفاصيل الموقع')),
                ('terms_conditions', models.TextField(blank=True, null=True, verbose_name='الشروط والأحكام')),
                ('participation_requirements', models.TextField(blank=True, null=True, verbose_name='متطلبات المشاركة')),
                ('images', models.TextField(blank=True, null=True, verbose_name='صور المزاد')),
                ('videos', models.TextField(blank=True, null=True, verbose_name='فيديوهات المزاد')),
                ('documents', models.TextField(blank=True, null=True, verbose_name='مستندات المزاد')),
                ('is_private', models.BooleanField(default=False, verbose_name='مزاد خاص')),
                ('is_featured', models.BooleanField(default=False, verbose_name='مزاد مميز')),
                ('is_published', models.BooleanField(default=False, verbose_name='منشور')),
                ('publish_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ النشر')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='عدد المشاهدات')),
                ('auctioneer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='managed_auctions', to=settings.AUTH_USER_MODEL, verbose_name='منظم المزاد')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_auctions', to=settings.AUTH_USER_MODEL, verbose_name='تم الإنشاء بواسطة')),
                ('invited_bidders', models.ManyToManyField(blank=True, related_name='invited_auctions', to=settings.AUTH_USER_MODEL, verbose_name='المزايدين المدعوين')),
                ('winning_bidder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_auctions', to=settings.AUTH_USER_MODEL, verbose_name='المزايد الفائز')),
            ],
            options={
                'verbose_name': 'مزاد',
                'verbose_name_plural': 'المزادات',
                'db_table': 'auctions',
                'ordering': ['-created_at'],
            },
            bases=(models.Model, base.models.StatusTransitionMixin),
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('bid_amount', models.DecimalField(decimal_places=2, max_digits=14, verbose_name='قيمة العطاء')),
                ('bid_time', models.DateTimeField(auto_now_add=True, verbose_name='وقت تقديم العطاء')),
                ('status', models.CharField(choices=[('pending', 'معلق'), ('accepted', 'مقبول'), ('rejected', 'مرفوض'), ('winning', 'فائز'), ('outbid', 'تم تجاوزه'), ('cancelled', 'ملغي')], default='pending', max_length=20, verbose_name='حالة العطاء')),
                ('max_bid_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, verbose_name='الحد الأقصى للمزايدة التلقائية')),
                ('is_auto_bid', models.BooleanField(default=False, verbose_name='مزايدة تلقائية')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='عنوان IP')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='معلومات المتصفح')),
                ('device_info', models.TextField(blank=True, default='{}', null=True, verbose_name='معلومات الجهاز')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='base.auction', verbose_name='المزاد')),
                ('bidder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to=settings.AUTH_USER_MODEL, verbose_name='المزايد')),
            ],
            options={
                'verbose_name': 'عطاء',
                'verbose_name_plural': 'العطاءات',
                'db_table': 'bids',
                'ordering': ['-bid_amount', 'bid_time'],
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('contract_number', models.CharField(max_length=50, unique=True, verbose_name='رقم العقد')),
                ('title', models.CharField(max_length=255, verbose_name='عنوان العقد')),
                ('status', models.CharField(choices=[('draft', 'مسودة'), ('pending_review', 'قيد المراجعة'), ('pending_buyer', 'بانتظار المشتري'), ('pending_seller', 'بانتظار البائع'), ('pending_payment', 'بانتظار الدفع'), ('signed', 'موقع'), ('active', 'نشط'), ('completed', 'مكتمل'), ('cancelled', 'ملغى'), ('disputed', 'متنازع عليه')], default='draft', max_length=20, verbose_name='حالة العقد')),
                ('contract_date', models.DateField(verbose_name='تاريخ العقد')),
                ('effective_date', models.DateField(blank=True, null=True, verbose_name='تاريخ السريان')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الانتهاء')),
                ('contract_amount', models.DecimalField(decimal_places=2, max_digits=14, verbose_name='قيمة العقد')),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='قيمة العربون')),
                ('commission_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='قيمة العمولة')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='قيمة الضريبة')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=14, verbose_name='المبلغ الإجمالي')),
                ('payment_method', models.CharField(choices=[('bank_transfer', 'تحويل بنكي'), ('cash', 'نقدي'), ('check', 'شيك'), ('installment', 'تقسيط'), ('escrow', 'ضمان')], max_length=50, verbose_name='طريقة الدفع')),
                ('payment_terms', models.TextField(verbose_name='شروط الدفع')),
                ('files', models.TextField(blank=True, default='[]', null=True, verbose_name='ملفات العقد')),
                ('terms_conditions', models.TextField(blank=True, null=True, verbose_name='الشروط والأحكام')),
                ('special_conditions', models.TextField(blank=True, null=True, verbose_name='شروط خاصة')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('buyer_signed', models.BooleanField(default=False, verbose_name='وقّع المشتري')),
                ('seller_signed', models.BooleanField(default=False, verbose_name='وقّع البائع')),
                ('agent_signed', models.BooleanField(default=False, verbose_name='وقّع الوكيل')),
                ('buyer_signature_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ توقيع المشتري')),
                ('seller_signature_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ توقيع البائع')),
                ('agent_signature_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ توقيع الوكيل')),
                ('is_verified', models.BooleanField(default=False, verbose_name='تم التحقق')),
                ('verification_authority', models.CharField(blank=True, max_length=255, null=True, verbose_name='جهة التوثيق')),
                ('verification_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ التوثيق')),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_contracts', to=settings.AUTH_USER_MODEL, verbose_name='الوكيل العقاري')),
                ('auction', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='contract', to='base.auction', verbose_name='المزاد')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='buyer_contracts', to=settings.AUTH_USER_MODEL, verbose_name='المشتري')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seller_contracts', to=settings.AUTH_USER_MODEL, verbose_name='البائع')),
            ],
            options={
                'verbose_name': 'عقد',
                'verbose_name_plural': 'العقود',
                'db_table': 'contracts',
                'ordering': ['-created_at'],
            },
            bases=(models.Model, base.models.StatusTransitionMixin),
        ),
        migrations.CreateModel(
            name='MessageThread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='المعرف العالمي')),
                ('subject', models.CharField(max_length=255, verbose_name='الموضوع')),
                ('thread_type', models.CharField(choices=[('inquiry', 'استفسار'), ('support', 'دعم'), ('negotiation', 'تفاوض'), ('general', 'عام'), ('notification', 'إشعار'), ('system', 'نظام')], default='general', max_length=20, verbose_name='نوع المحادثة')),
                ('status', models.CharField(choices=[('active', 'نشط'), ('closed', 'مغلق'), ('archived', 'مؤرشف'), ('deleted', 'محذوف')], default='active', max_length=20, verbose_name='حالة المحادثة')),
                ('is_private', models.BooleanField(default=False, verbose_name='محادثة خاصة')),
                ('is_system_thread', models.BooleanField(default=False, verbose_name='محادثة نظام')),
                ('last_message_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ آخر رسالة')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_threads', to=settings.AUTH_USER_MODEL, verbose_name='منشئ المحادثة')),
                ('related_auction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='message_threads', to='base.auction', verbose_name='المزاد المرتبط')),
                ('related_contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='message_threads', to='base.contract', verbose_name='العقد المرتبط')),
            ],
            options={
                'verbose_name': 'محادثة',
                'verbose_name_plural': 'المحادثات',
                'db_table': 'message_threads',
                'ordering': ['-last_message_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('subject', models.CharField(blank=True, max_length=255, null=True, verbose_name='الموضوع')),
                ('content', models.TextField(verbose_name='المحتوى')),
                ('message_type', models.CharField(choices=[('inquiry', 'استفسار'), ('offer', 'عرض'), ('negotiation', 'تفاوض'), ('notification', 'إشعار'), ('update', 'تحديث'), ('support', 'دعم'), ('reply', 'رد')], default='inquiry', max_length=20, verbose_name='نوع الرسالة')),
                ('status', models.CharField(choices=[('sent', 'مرسلة'), ('delivered', 'تم التسليم'), ('read', 'مقروءة'), ('replied', 'تم الرد'), ('archived', 'مؤرشفة')], default='sent', max_length=20, verbose_name='حالة الرسالة')),
                ('sent_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإرسال')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ التسليم')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ القراءة')),
                ('attachments', models.TextField(blank=True, default='[]', null=True, verbose_name='المرفقات')),
                ('is_system_message', models.BooleanField(default=False, verbose_name='رسالة نظام')),
                ('is_important', models.BooleanField(default=False, verbose_name='هامة')),
                ('parent_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='base.message', verbose_name='الرسالة الأصلية')),
                ('related_auction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='base.auction', verbose_name='المزاد المرتبط')),
                ('related_contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='base.contract', verbose_name='العقد المرتبط')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL, verbose_name='المرسل')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='base.messagethread', verbose_name='المحادثة')),
            ],
            options={
                'verbose_name': 'رسالة',
                'verbose_name_plural': 'الرسائل',
                'db_table': 'messages',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('payment_number', models.CharField(max_length=50, unique=True, verbose_name='رقم الدفعة')),
                ('payment_type', models.CharField(choices=[('deposit', 'عربون'), ('installment', 'قسط'), ('full_payment', 'دفعة كاملة'), ('commission', 'عمولة'), ('tax', 'ضريبة'), ('fee', 'رسوم')], max_length=20, verbose_name='نوع الدفعة')),
                ('payment_method', models.CharField(choices=[('bank_transfer', 'تحويل بنكي'), ('cash', 'نقدي'), ('check', 'شيك'), ('credit_card', 'بطاقة ائتمان'), ('online', 'دفع إلكتروني')], max_length=20, verbose_name='طريقة الدفع')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14, verbose_name='المبلغ')),
                ('currency', models.CharField(default='SAR', max_length=3, verbose_name='العملة')),
                ('payment_date', models.DateTimeField(verbose_name='تاريخ الدفع')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الاستحقاق')),
                ('status', models.CharField(choices=[('pending', 'معلق'), ('processing', 'قيد المعالجة'), ('completed', 'مكتمل'), ('failed', 'فاشل'), ('refunded', 'مسترد'), ('cancelled', 'ملغى'), ('disputed', 'متنازع عليه')], default='pending', max_length=20, verbose_name='حالة الدفعة')),
                ('confirmed_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ التأكيد')),
                ('transaction_reference', models.CharField(blank=True, max_length=100, null=True, verbose_name='مرجع المعاملة')),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='اسم البنك')),
                ('account_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='اسم الحساب')),
                ('account_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='رقم الحساب')),
                ('check_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='رقم الشيك')),
                ('files', models.TextField(blank=True, default='[]', null=True, verbose_name='ملفات الدفعة')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_payments', to=settings.AUTH_USER_MODEL, verbose_name='تم التأكيد بواسطة')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='base.contract', verbose_name='العقد')),
                ('payee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments_received', to=settings.AUTH_USER_MODEL, verbose_name='المستلم')),
                ('payer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments_made', to=settings.AUTH_USER_MODEL, verbose_name='الدافع')),
            ],
            options={
                'verbose_name': 'دفعة',
                'verbose_name_plural': 'الدفعات',
                'db_table': 'payments',
                'ordering': ['-payment_date'],
            },
            bases=(models.Model, base.models.StatusTransitionMixin),
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('property_number', models.CharField(max_length=50, unique=True, verbose_name='رقم العقار')),
                ('title', models.CharField(max_length=255, verbose_name='عنوان العقار')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='الرابط المختصر')),
                ('property_type', models.CharField(choices=[('land', 'أرض'), ('apartment', 'شقة'), ('villa', 'فيلا'), ('commercial', 'تجاري'), ('building', 'مبنى'), ('farm', 'مزرعة'), ('industrial', 'صناعي'), ('office', 'مكتب'), ('retail', 'محل تجاري'), ('mixed_use', 'متعدد الاستخدامات')], max_length=50, verbose_name='نوع العقار')),
                ('description', models.TextField(blank=True, null=True, verbose_name='وصف تفصيلي')),
                ('condition', models.CharField(choices=[('excellent', 'ممتاز'), ('very_good', 'جيد جدا'), ('good', 'جيد'), ('fair', 'مقبول'), ('poor', 'سيئ'), ('under_construction', 'تحت الإنشاء'), ('new', 'جديد')], default='good', max_length=50, verbose_name='حالة العقار')),
                ('status', models.CharField(choices=[('draft', 'مسودة'), ('pending_approval', 'في انتظار الموافقة'), ('active', 'نشط'), ('under_contract', 'تحت التعاقد'), ('sold', 'مباع'), ('inactive', 'غير نشط'), ('rejected', 'مرفوض')], default='draft', max_length=20, verbose_name='حالة العقار')),
                ('status_history', models.TextField(blank=True, null=True, verbose_name='سجل حالات العقار')),
                ('deed_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='رقم الصك')),
                ('deed_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الصك')),
                ('address', models.CharField(max_length=255, verbose_name='العنوان')),
                ('city', models.CharField(max_length=100, verbose_name='المدينة')),
                ('district', models.CharField(max_length=100, verbose_name='الحي')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='الرمز البريدي')),
                ('country', models.CharField(default='Saudi Arabia', max_length=100, verbose_name='الدولة')),
                ('location', models.TextField(blank=True, null=True, verbose_name='الموقع الجغرافي')),
                ('facing_direction', models.CharField(blank=True, choices=[('north', 'شمال'), ('east', 'شرق'), ('south', 'جنوب'), ('west', 'غرب'), ('northeast', 'شمال شرق'), ('southeast', 'جنوب شرق'), ('southwest', 'جنوب غرب'), ('northwest', 'شمال غرب')], max_length=20, null=True, verbose_name='اتجاه الواجهة')),
                ('street_details', models.TextField(blank=True, null=True, verbose_name='تفاصيل الشوارع')),
                ('area', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='مساحة العقار')),
                ('built_up_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='المساحة المبنية')),
                ('bedrooms', models.PositiveIntegerField(default=0, verbose_name='عدد غرف النوم')),
                ('bathrooms', models.PositiveIntegerField(default=0, verbose_name='عدد الحمامات')),
                ('rooms', models.TextField(blank=True, null=True, verbose_name='تفاصيل الغرف')),
                ('floor_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='رقم الطابق')),
                ('total_floors', models.PositiveIntegerField(blank=True, null=True, verbose_name='إجمالي الطوابق')),
                ('year_built', models.PositiveIntegerField(blank=True, null=True, verbose_name='سنة البناء')),
                ('outdoor_spaces', models.TextField(blank=True, null=True, verbose_name='المساحات الخارجية')),
                ('estimated_value', models.DecimalField(decimal_places=2, max_digits=14, verbose_name='القيمة التقديرية')),
                ('asking_price', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, verbose_name='السعر المطلوب')),
                ('price_per_sqm', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, verbose_name='السعر لكل متر مربع')),
                ('rental_details', models.TextField(blank=True, null=True, verbose_name='تفاصيل الإيجار')),
                ('parking', models.TextField(blank=True, null=True, verbose_name='تفاصيل مواقف السيارات')),
                ('images', models.TextField(blank=True, null=True, verbose_name='صور العقار')),
                ('videos', models.TextField(blank=True, null=True, verbose_name='فيديوهات العقار')),
                ('virtual_tours', models.TextField(blank=True, null=True, verbose_name='جولات افتراضية')),
                ('documents', models.TextField(blank=True, null=True, verbose_name='مستندات العقار')),
                ('floor_plans', models.TextField(blank=True, null=True, verbose_name='مخططات الطوابق')),
                ('features', models.TextField(blank=True, null=True, verbose_name='المميزات')),
                ('amenities', models.TextField(blank=True, null=True, verbose_name='المرافق')),
                ('building_services', models.TextField(blank=True, null=True, verbose_name='خدمات المبنى')),
                ('infrastructure', models.TextField(blank=True, null=True, verbose_name='البنية التحتية')),
                ('current_usage', models.CharField(blank=True, choices=[('residential', 'سكني'), ('commercial', 'تجاري'), ('mixed', 'مختلط'), ('industrial', 'صناعي'), ('agricultural', 'زراعي')], max_length=30, null=True, verbose_name='الاستخدام الحالي')),
                ('optimal_usage', models.CharField(blank=True, choices=[('residential', 'سكني'), ('commercial', 'تجاري'), ('mixed', 'مختلط'), ('industrial', 'صناعي'), ('agricultural', 'زراعي')], max_length=30, null=True, verbose_name='الاستخدام الأمثل')),
                ('surroundings', models.TextField(blank=True, null=True, verbose_name='المحيط')),
                ('is_verified', models.BooleanField(default=False, verbose_name='تم التحقق')),
                ('verification_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ التحقق')),
                ('verification_details', models.TextField(blank=True, null=True, verbose_name='تفاصيل التحقق')),
                ('is_featured', models.BooleanField(default=False, verbose_name='مميز')),
                ('is_published', models.BooleanField(default=False, verbose_name='منشور')),
                ('publish_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ النشر')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='عدد المشاهدات')),
                ('reference_ids', models.TextField(blank=True, null=True, verbose_name='أرقام مرجعية')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='owned_properties', to=settings.AUTH_USER_MODEL, verbose_name='المالك')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_properties', to=settings.AUTH_USER_MODEL, verbose_name='تم التحقق بواسطة')),
            ],
            options={
                'verbose_name': 'عقار',
                'verbose_name_plural': 'العقارات',
                'db_table': 'properties',
                'ordering': ['-created_at'],
            },
            bases=(models.Model, base.models.StatusTransitionMixin),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('notification_type', models.CharField(choices=[('auction_start', 'بدء مزاد'), ('auction_end', 'انتهاء مزاد'), ('new_bid', 'عطاء جديد'), ('outbid', 'تم تجاوز العطاء'), ('winning_bid', 'عطاء فائز'), ('auction_status', 'تغيير حالة المزاد'), ('property_listed', 'إدراج عقار جديد'), ('property_status', 'تغيير حالة العقار'), ('payment', 'دفعة جديدة'), ('contract_status', 'تغيير حالة العقد'), ('message', 'رسالة جديدة'), ('system', 'إشعار نظام')], max_length=50, verbose_name='نوع الإشعار')),
                ('title', models.CharField(max_length=255, verbose_name='العنوان')),
                ('content', models.TextField(verbose_name='المحتوى')),
                ('channel', models.CharField(choices=[('app', 'تطبيق'), ('email', 'بريد إلكتروني'), ('sms', 'رسالة نصية'), ('push', 'إشعار فوري')], default='app', max_length=20, verbose_name='قناة الإشعار')),
                ('is_read', models.BooleanField(default=False, verbose_name='تمت القراءة')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ القراءة')),
                ('is_sent', models.BooleanField(default=False, verbose_name='تم الإرسال')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ الإرسال')),
                ('icon', models.CharField(blank=True, max_length=50, null=True, verbose_name='الأيقونة')),
                ('color', models.CharField(blank=True, max_length=20, null=True, verbose_name='اللون')),
                ('action_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='رابط العمل')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='المستلم')),
                ('related_auction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='base.auction', verbose_name='المزاد المرتبط')),
                ('related_bid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='base.bid', verbose_name='العطاء المرتبط')),
                ('related_contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='base.contract', verbose_name='العقد المرتبط')),
                ('related_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='base.message', verbose_name='الرسالة المرتبطة')),
                ('related_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='base.payment', verbose_name='الدفعة المرتبطة')),
                ('related_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='base.property', verbose_name='العقار المرتبط')),
            ],
            options={
                'verbose_name': 'إشعار',
                'verbose_name_plural': 'إشعارات',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='messagethread',
            name='related_property',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='message_threads', to='base.property', verbose_name='العقار المرتبط'),
        ),
        migrations.AddField(
            model_name='message',
            name='related_property',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='base.property', verbose_name='العقار المرتبط'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('document_number', models.CharField(max_length=50, unique=True, verbose_name='رقم المستند')),
                ('title', models.CharField(max_length=255, verbose_name='عنوان المستند')),
                ('document_type', models.CharField(choices=[('deed', 'صك ملكية'), ('inspection', 'تقرير فحص'), ('appraisal', 'تقرير تقييم'), ('coastal_assessment', 'تقييم ساحلي'), ('legal', 'مستند قانوني'), ('contract', 'عقد'), ('identity', 'إثبات هوية'), ('financial', 'مستند مالي'), ('other', 'أخرى')], max_length=50, verbose_name='نوع المستند')),
                ('description', models.TextField(blank=True, null=True, verbose_name='وصف المستند')),
                ('files', models.TextField(blank=True, default='[]', null=True, verbose_name='ملفات المستند')),
                ('verification_status', models.CharField(choices=[('pending', 'معلق'), ('verified', 'تم التحقق'), ('rejected', 'مرفوض')], default='pending', max_length=20, verbose_name='حالة التحقق')),
                ('verification_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ التحقق')),
                ('verification_notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات التحقق')),
                ('metadata', models.TextField(blank=True, default='{}', null=True, verbose_name='بيانات وصفية')),
                ('issue_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الإصدار')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الانتهاء')),
                ('auction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='auction_documents', to='base.auction', verbose_name='المزاد المرتبط')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contract_documents', to='base.contract', verbose_name='العقد المرتبط')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL, verbose_name='تم الرفع بواسطة')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL, verbose_name='تم التحقق بواسطة')),
                ('related_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='property_documents', to='base.property', verbose_name='العقار المرتبط')),
            ],
            options={
                'verbose_name': 'مستند',
                'verbose_name_plural': 'المستندات',
                'db_table': 'documents',
                'ordering': ['-created_at'],
            },
            bases=(models.Model, base.models.StatusTransitionMixin),
        ),
        migrations.AddField(
            model_name='contract',
            name='related_property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contracts', to='base.property', verbose_name='العقار'),
        ),
        migrations.AddField(
            model_name='auction',
            name='related_property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='auctions', to='base.property', verbose_name='العقار'),
        ),
        migrations.CreateModel(
            name='PropertyView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('view_type', models.CharField(choices=[('OCEAN', 'إطلالة على المحيط'), ('MOUNTAIN', 'إطلالة على الجبل'), ('CITY', 'إطلالة على المدينة'), ('FOREST', 'إطلالة على الغابة'), ('LAKE', 'إطلالة على البحيرة'), ('CUSTOM', 'إطلالة مخصصة')], max_length=20, verbose_name='نوع الإطلالة')),
                ('size_sqm', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='المساحة (متر مربع)')),
                ('location', models.CharField(max_length=255, verbose_name='الموقع')),
                ('address', models.TextField(verbose_name='العنوان')),
                ('elevation', models.PositiveIntegerField(blank=True, null=True, verbose_name='الارتفاع')),
                ('view_direction', models.CharField(blank=True, max_length=50, verbose_name='اتجاه الإطلالة')),
                ('legal_description', models.TextField(verbose_name='الوصف القانوني')),
                ('condition', models.TextField(verbose_name='الحالة')),
                ('historical_views', models.TextField(blank=True, default='{}', verbose_name='الإطلالات التاريخية')),
                ('images', models.TextField(blank=True, default='[]', verbose_name='الصور')),
                ('auction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='property_view', to='base.auction', verbose_name='المزاد')),
            ],
            options={
                'verbose_name': 'عرض العقار',
                'verbose_name_plural': 'عروض العقارات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ThreadParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('custom_permissions', models.JSONField(blank=True, default=dict, help_text='صلاحيات خاصة بهذه المحادثة فقط', verbose_name='صلاحيات مخصصة')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('is_muted', models.BooleanField(default=False, verbose_name='صامت')),
                ('last_read_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ آخر قراءة')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='thread_participations', to='accounts.role', verbose_name='الدور في المحادثة')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_participants', to='base.messagethread', verbose_name='المحادثة')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_memberships', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'مشارك في محادثة',
                'verbose_name_plural': 'مشاركون في محادثة',
                'db_table': 'thread_participants',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('transaction_number', models.CharField(max_length=50, unique=True, verbose_name='رقم المعاملة')),
                ('transaction_type', models.CharField(choices=[('deposit', 'عربون'), ('payment', 'دفعة'), ('refund', 'استرداد'), ('commission', 'عمولة'), ('fee', 'رسوم'), ('tax', 'ضريبة'), ('withdrawal', 'سحب'), ('transfer', 'تحويل')], max_length=20, verbose_name='نوع المعاملة')),
                ('description', models.TextField(verbose_name='وصف المعاملة')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='المبلغ')),
                ('currency', models.CharField(default='SAR', max_length=3, verbose_name='العملة')),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=1.0, max_digits=10, verbose_name='سعر الصرف')),
                ('fee_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='مبلغ الرسوم')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='مبلغ الضريبة')),
                ('transaction_date', models.DateTimeField(verbose_name='تاريخ المعاملة')),
                ('status', models.CharField(choices=[('pending', 'معلق'), ('processing', 'قيد المعالجة'), ('completed', 'مكتمل'), ('failed', 'فاشل'), ('cancelled', 'ملغى'), ('disputed', 'متنازع عليه')], default='pending', max_length=20, verbose_name='حالة المعاملة')),
                ('reference', models.CharField(blank=True, max_length=100, null=True, verbose_name='المرجع')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ المعالجة')),
                ('auction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='base.auction', verbose_name='المزاد المرتبط')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='base.contract', verbose_name='العقد المرتبط')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='outgoing_transactions', to=settings.AUTH_USER_MODEL, verbose_name='من المستخدم')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='base.payment', verbose_name='الدفعة المرتبطة')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_transactions', to=settings.AUTH_USER_MODEL, verbose_name='تمت المعالجة بواسطة')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='incoming_transactions', to=settings.AUTH_USER_MODEL, verbose_name='إلى المستخدم')),
            ],
            options={
                'verbose_name': 'معاملة مالية',
                'verbose_name_plural': 'معاملات مالية',
                'db_table': 'transactions',
                'ordering': ['-transaction_date'],
            },
            bases=(models.Model, base.models.StatusTransitionMixin),
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['auction', 'bid_amount'], name='bids_auction_fa9613_idx'),
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['auction', 'bidder'], name='bids_auction_d9ae82_idx'),
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['status'], name='bids_status_5924ec_idx'),
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['bidder'], name='bids_bidder__a777a2_idx'),
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['bid_time'], name='bids_bid_tim_04c92f_idx'),
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['is_auto_bid'], name='bids_is_auto_696382_idx'),
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['max_bid_amount'], name='bids_max_bid_7809f7_idx'),
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['created_at', 'updated_at'], name='bids_created_11e6c7_idx'),
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['auction', 'status', 'bid_amount'], name='bids_auction_a1e76c_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='payments_status_d621e5_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_date'], name='payments_payment_aebcb7_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['contract', 'payment_type'], name='payments_contrac_a85500_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payer'], name='payments_payer_i_23fca4_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payee'], name='payments_payee_i_31382f_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_number'], name='payments_payment_c27a96_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['due_date'], name='payments_due_dat_ff319d_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_method'], name='payments_payment_ee488d_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['created_at', 'updated_at'], name='payments_created_425f0c_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['property_type'], name='properties_propert_f38ecc_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['city', 'district'], name='properties_city_86970a_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['status'], name='properties_status_e6008a_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['is_featured', 'is_published'], name='properties_is_feat_e44c63_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['year_built'], name='properties_year_bu_814649_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['area'], name='properties_area_39ec22_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['estimated_value'], name='properties_estimat_f7273b_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['bedrooms', 'bathrooms'], name='properties_bedroom_2aae3d_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['owner'], name='properties_owner_i_921947_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['property_number'], name='properties_propert_9fa5c0_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['slug'], name='properties_slug_e22d01_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['condition'], name='properties_conditi_db0a3b_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['current_usage'], name='properties_current_1056c3_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['optimal_usage'], name='properties_optimal_385673_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['verified_by'], name='properties_verifie_1a0601_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['created_at', 'updated_at'], name='properties_created_808ad8_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'is_read'], name='notificatio_recipie_583549_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='notificatio_notific_19df93_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['channel'], name='notificatio_channel_d2a579_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['is_sent'], name='notificatio_is_sent_7b3d0f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['sent_at'], name='notificatio_sent_at_eceac5_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['read_at'], name='notificatio_read_at_392a1c_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['related_property'], name='notificatio_related_b4c2d8_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['related_auction'], name='notificatio_related_8e456f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['related_bid'], name='notificatio_related_1f67b8_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['related_contract'], name='notificatio_related_27562a_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['related_payment'], name='notificatio_related_afab36_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['related_message'], name='notificatio_related_2a4fd2_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at', 'updated_at'], name='notificatio_created_0a6827_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['thread_type'], name='message_thr_thread__6f5b46_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['status'], name='message_thr_status_071b64_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['creator'], name='message_thr_creator_9569df_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['related_property'], name='message_thr_related_9b664f_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['related_auction'], name='message_thr_related_d06e8b_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['related_contract'], name='message_thr_related_ced6a9_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['is_private'], name='message_thr_is_priv_a9c0df_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['is_system_thread'], name='message_thr_is_syst_3f56d1_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['last_message_at'], name='message_thr_last_me_475f12_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['created_at', 'updated_at'], name='message_thr_created_1d2a3d_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['thread', 'sent_at'], name='messages_thread__f33aaa_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender', 'status'], name='messages_sender__892193_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['is_system_message'], name='messages_is_syst_e8c19c_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['message_type'], name='messages_message_5af74b_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['related_property'], name='messages_related_d41525_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['related_auction'], name='messages_related_f78f34_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['related_contract'], name='messages_related_2cd436_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['parent_message'], name='messages_parent__8cda5e_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['is_important'], name='messages_is_impo_a15e63_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['delivered_at'], name='messages_deliver_b223b6_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['read_at'], name='messages_read_at_f1c617_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['created_at', 'updated_at'], name='messages_created_ca2a15_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['document_number'], name='documents_documen_19bab8_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['document_type'], name='documents_documen_fc21d0_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['related_property'], name='documents_related_e9d8ac_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['auction'], name='documents_auction_807a51_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['contract'], name='documents_contrac_046399_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['uploaded_by'], name='documents_uploade_aad805_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['verification_status'], name='documents_verific_0b0dff_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['verified_by'], name='documents_verifie_89acdf_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['issue_date'], name='documents_issue_d_c0cf0d_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['expiry_date'], name='documents_expiry__8f271f_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['created_at', 'updated_at'], name='documents_created_8657ff_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['status'], name='contracts_status_093df1_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['contract_date'], name='contracts_contrac_383e74_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['buyer', 'seller'], name='contracts_buyer_i_3cc964_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['auction'], name='contracts_auction_7dd20e_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['related_property'], name='contracts_related_752e78_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['agent'], name='contracts_agent_i_78e286_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['buyer'], name='contracts_buyer_i_cdac2f_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['seller'], name='contracts_seller__7bab4c_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['payment_method'], name='contracts_payment_8bbadb_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['contract_number'], name='contracts_contrac_bb0c23_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['effective_date'], name='contracts_effecti_67b769_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['expiry_date'], name='contracts_expiry__fc1fec_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['is_verified'], name='contracts_is_veri_58c3e4_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['buyer_signed', 'seller_signed', 'agent_signed'], name='contracts_buyer_s_85b720_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['created_at', 'updated_at'], name='contracts_created_94563b_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['status'], name='auctions_status_12e6a2_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['start_date'], name='auctions_start_d_93d083_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['end_date'], name='auctions_end_dat_34dee3_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['is_featured', 'is_published'], name='auctions_is_feat_411a1a_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['uuid'], name='auctions_uuid_11bc02_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['slug'], name='auctions_slug_677af5_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['related_property'], name='auctions_related_cd7d98_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['created_by'], name='auctions_created_65ab10_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['auctioneer'], name='auctions_auction_158ca1_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['winning_bidder'], name='auctions_winning_75a8a0_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['auction_type'], name='auctions_auction_8ac351_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['created_at', 'updated_at'], name='auctions_created_b20bac_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyview',
            index=models.Index(fields=['view_type'], name='base_proper_view_ty_60b15c_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyview',
            index=models.Index(fields=['location'], name='base_proper_locatio_81513c_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyview',
            index=models.Index(fields=['auction'], name='base_proper_auction_c06b20_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyview',
            index=models.Index(fields=['size_sqm'], name='base_proper_size_sq_f29880_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyview',
            index=models.Index(fields=['elevation'], name='base_proper_elevati_6ec6bd_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyview',
            index=models.Index(fields=['created_at', 'updated_at'], name='base_proper_created_58b646_idx'),
        ),
        migrations.AddIndex(
            model_name='threadparticipant',
            index=models.Index(fields=['user', 'is_active'], name='thread_part_user_id_12cc89_idx'),
        ),
        migrations.AddIndex(
            model_name='threadparticipant',
            index=models.Index(fields=['thread', 'role'], name='thread_part_thread__5eef04_idx'),
        ),
        migrations.AddIndex(
            model_name='threadparticipant',
            index=models.Index(fields=['is_muted'], name='thread_part_is_mute_5f26a5_idx'),
        ),
        migrations.AddIndex(
            model_name='threadparticipant',
            index=models.Index(fields=['last_read_at'], name='thread_part_last_re_c62759_idx'),
        ),
        migrations.AddIndex(
            model_name='threadparticipant',
            index=models.Index(fields=['created_at', 'updated_at'], name='thread_part_created_ec7474_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='threadparticipant',
            unique_together={('thread', 'user')},
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_type'], name='transaction_transac_ddda52_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['status'], name='transaction_status_505a2f_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['from_user', 'to_user'], name='transaction_from_us_085d66_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_number'], name='transaction_transac_b11dd9_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_date'], name='transaction_transac_0d716a_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['payment'], name='transaction_payment_547e6d_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['auction'], name='transaction_auction_a51824_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['contract'], name='transaction_contrac_6ddd37_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['processed_by'], name='transaction_process_22b552_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['created_at', 'updated_at'], name='transaction_created_dae11c_idx'),
        ),
    ]
