# Generated by Django 5.1.4 on 2025-04-08 15:00

import base.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='معرف فريد')),
                ('title', models.CharField(max_length=255, verbose_name='العنوان')),
                ('auction_type', models.CharField(choices=[('english', 'مزاد إنجليزي'), ('dutch', 'مزاد هولندي'), ('sealed', 'مزاد العطاءات المغلقة'), ('reserve', 'مزاد بحد أدنى'), ('no_reserve', 'مزاد بدون حد أدنى')], max_length=20, verbose_name='نوع المزاد')),
                ('status', models.CharField(choices=[('draft', 'مسودة'), ('scheduled', 'مجدول'), ('live', 'مباشر'), ('ended', 'منتهي'), ('cancelled', 'ملغي'), ('completed', 'مكتمل')], default='draft', max_length=20, verbose_name='الحالة')),
                ('description', models.TextField(verbose_name='الوصف')),
                ('start_date', models.DateTimeField(verbose_name='تاريخ البدء')),
                ('end_date', models.DateTimeField(verbose_name='تاريخ الانتهاء')),
                ('registration_deadline', models.DateTimeField(blank=True, null=True, verbose_name='موعد انتهاء التسجيل')),
                ('viewing_dates', models.JSONField(blank=True, default=list, help_text='تواريخ وأوقات المعاينة المتاحة', verbose_name='مواعيد المعاينة')),
                ('timeline', models.JSONField(blank=True, default=list, help_text='مراحل المزاد المختلفة وتواريخها', verbose_name='الجدول الزمني')),
                ('starting_bid', models.DecimalField(decimal_places=2, max_digits=14, verbose_name='المزايدة الأولية')),
                ('reserve_price', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, verbose_name='السعر المحفوظ')),
                ('minimum_increment', models.DecimalField(decimal_places=2, default=100.0, max_digits=14, verbose_name='الحد الأدنى للزيادة')),
                ('current_bid', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, verbose_name='المزايدة الحالية')),
                ('estimated_value', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, verbose_name='القيمة التقديرية')),
                ('bid_history', models.JSONField(blank=True, default=list, editable=False, help_text='سجل المزايدات وتفاصيلها', verbose_name='سجل المزايدات')),
                ('financial_terms', models.JSONField(blank=True, default=dict, help_text='تفاصيل وشروط الدفع والرسوم', verbose_name='الشروط المالية')),
                ('buyer_premium_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='عمولة المشتري (%)')),
                ('registration_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='رسوم التسجيل')),
                ('deposit_required', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='التأمين المطلوب')),
                ('is_published', models.BooleanField(default=False, verbose_name='منشور')),
                ('is_featured', models.BooleanField(default=False, verbose_name='مميز')),
                ('is_private', models.BooleanField(default=False, verbose_name='مزاد خاص')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='auctions/covers/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'webp']), base.models.validate_image_size], verbose_name='صورة الغلاف')),
                ('terms_conditions', models.TextField(blank=True, verbose_name='الشروط والأحكام')),
                ('special_notes', models.TextField(blank=True, verbose_name='ملاحظات خاصة')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='عدد المشاهدات')),
                ('bid_count', models.PositiveIntegerField(default=0, verbose_name='عدد المزايدات')),
                ('registered_bidders', models.PositiveIntegerField(default=0, verbose_name='المزايدين المسجلين')),
                ('analytics', models.JSONField(blank=True, default=dict, help_text='إحصائيات وبيانات تحليلية عن المزاد', verbose_name='بيانات تحليلية')),
            ],
            options={
                'verbose_name': 'مزاد',
                'verbose_name_plural': 'المزادات',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='AuctionImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('alt_text', models.CharField(blank=True, max_length=255, verbose_name='النص البديل')),
                ('width', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='العرض')),
                ('height', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='الارتفاع')),
                ('file_size', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='حجم الملف (كيلوبايت)')),
                ('image', models.ImageField(upload_to=base.models.auction_image_path, validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'webp']), base.models.validate_image_size], verbose_name='الصورة')),
                ('is_primary', models.BooleanField(default=False, verbose_name='صورة رئيسية')),
                ('caption', models.CharField(blank=True, max_length=255, verbose_name='التعليق')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='ترتيب العرض')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='بيانات وصفية')),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='base.auction', verbose_name='المزاد')),
            ],
            options={
                'verbose_name': 'صورة المزاد',
                'verbose_name_plural': 'صور المزاد',
                'ordering': ['order', '-is_primary', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('contract_number', models.CharField(max_length=50, unique=True, verbose_name='رقم العقد')),
                ('title', models.CharField(max_length=255, verbose_name='العنوان')),
                ('description', models.TextField(blank=True, verbose_name='الوصف')),
                ('status', models.CharField(choices=[('draft', 'مسودة'), ('pending', 'بانتظار الموافقة'), ('active', 'نشط'), ('fulfilled', 'تم الوفاء'), ('cancelled', 'ملغي'), ('expired', 'منتهي'), ('disputed', 'متنازع عليه')], default='draft', max_length=20, verbose_name='الحالة')),
                ('contract_file', models.FileField(blank=True, help_text='تحميل وثيقة العقد (PDF أو Word)', null=True, upload_to=base.models.contract_file_path, validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx'])], verbose_name='ملف العقد')),
                ('contract_date', models.DateField(verbose_name='تاريخ العقد')),
                ('effective_date', models.DateField(blank=True, null=True, verbose_name='تاريخ السريان')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الانتهاء')),
                ('timeline', models.JSONField(blank=True, default=list, help_text='المراحل الزمنية للعقد', verbose_name='الجدول الزمني')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=14, verbose_name='المبلغ الإجمالي')),
                ('down_payment', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, verbose_name='الدفعة الأولى')),
                ('payment_method', models.CharField(choices=[('full_payment', 'دفعة كاملة'), ('installments', 'أقساط'), ('mortgage', 'رهن عقاري'), ('custom', 'خطة دفع مخصصة')], max_length=20, verbose_name='طريقة الدفع')),
                ('payment_terms', models.TextField(blank=True, verbose_name='شروط الدفع')),
                ('payment_details', models.JSONField(blank=True, default=dict, help_text='تفاصيل وجدول الدفعات', verbose_name='تفاصيل الدفع')),
                ('payments_history', models.JSONField(blank=True, default=list, help_text='سجل تاريخي للمدفوعات المتعلقة بالعقد', verbose_name='سجل المدفوعات')),
                ('special_conditions', models.TextField(blank=True, verbose_name='شروط خاصة')),
                ('is_verified', models.BooleanField(default=False, verbose_name='تم التحقق')),
                ('verification_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ التحقق')),
                ('buyer_signed', models.BooleanField(default=False, verbose_name='توقيع المشتري')),
                ('buyer_signed_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ توقيع المشتري')),
                ('seller_signed', models.BooleanField(default=False, verbose_name='توقيع البائع')),
                ('seller_signed_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ توقيع البائع')),
                ('parties', models.JSONField(blank=True, default=list, help_text='تفاصيل أطراف العقد', verbose_name='الأطراف')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='buyer_contracts', to=settings.AUTH_USER_MODEL, verbose_name='المشتري')),
                ('related_auction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contracts', to='base.auction', verbose_name='المزاد المرتبط')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seller_contracts', to=settings.AUTH_USER_MODEL, verbose_name='البائع')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_contracts', to=settings.AUTH_USER_MODEL, verbose_name='تم التحقق بواسطة')),
            ],
            options={
                'verbose_name': 'عقد',
                'verbose_name_plural': 'العقود',
                'ordering': ['-contract_date'],
            },
        ),
        migrations.CreateModel(
            name='MessageThread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='معرف فريد')),
                ('subject', models.CharField(max_length=255, verbose_name='الموضوع')),
                ('thread_type', models.CharField(choices=[('inquiry', 'استفسار'), ('auction', 'مزاد'), ('property', 'عقار'), ('contract', 'عقد'), ('support', 'دعم'), ('other', 'أخرى')], max_length=20, verbose_name='نوع المحادثة')),
                ('status', models.CharField(choices=[('active', 'نشط'), ('archived', 'مؤرشف'), ('closed', 'مغلق'), ('deleted', 'محذوف')], default='active', max_length=20, verbose_name='الحالة')),
                ('is_private', models.BooleanField(default=False, verbose_name='محادثة خاصة')),
                ('is_system_thread', models.BooleanField(default=False, verbose_name='محادثة نظام')),
                ('last_message_at', models.DateTimeField(blank=True, null=True, verbose_name='وقت آخر رسالة')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='بيانات إضافية للواجهة الأمامية', verbose_name='بيانات إضافية')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_threads', to=settings.AUTH_USER_MODEL, verbose_name='المنشئ')),
                ('related_auction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='threads', to='base.auction', verbose_name='المزاد المرتبط')),
            ],
            options={
                'verbose_name': 'محادثة',
                'verbose_name_plural': 'المحادثات',
                'ordering': ['-last_message_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('property_number', models.CharField(max_length=50, unique=True, verbose_name='رقم العقار')),
                ('title', models.CharField(max_length=255, verbose_name='العنوان')),
                ('property_type', models.CharField(choices=[('residential', 'سكني'), ('commercial', 'تجاري'), ('land', 'أرض'), ('industrial', 'صناعي'), ('mixed_use', 'متعدد الاستخدام')], max_length=20, verbose_name='نوع العقار')),
                ('status', models.CharField(choices=[('available', 'متاح'), ('under_contract', 'تحت العقد'), ('sold', 'مباع'), ('off_market', 'خارج السوق'), ('auction', 'في المزاد')], default='available', max_length=20, verbose_name='الحالة')),
                ('location', models.JSONField(blank=True, default=dict, help_text='يحتوي على خط العرض وخط الطول واسم المدينة والعنوان', verbose_name='الموقع الجغرافي')),
                ('address', models.CharField(max_length=255, verbose_name='العنوان')),
                ('city', models.CharField(max_length=100, verbose_name='المدينة')),
                ('state', models.CharField(max_length=100, verbose_name='المنطقة/المحافظة')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='الرمز البريدي')),
                ('country', models.CharField(default='المملكة العربية السعودية', max_length=100, verbose_name='الدولة')),
                ('description', models.TextField(verbose_name='الوصف')),
                ('features', models.JSONField(blank=True, default=list, help_text='قائمة بالمميزات الرئيسية للعقار', verbose_name='المميزات')),
                ('amenities', models.JSONField(blank=True, default=list, help_text='قائمة بالمرافق المتاحة', verbose_name='المرافق')),
                ('rooms', models.JSONField(blank=True, default=list, help_text='تفاصيل الغرف وأحجامها', verbose_name='الغرف')),
                ('specifications', models.JSONField(blank=True, default=dict, help_text='مواصفات العقار التفصيلية', verbose_name='المواصفات')),
                ('size_sqm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='المساحة (متر مربع)')),
                ('bedrooms', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='عدد غرف النوم')),
                ('bathrooms', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='عدد الحمامات')),
                ('parking_spaces', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='أماكن وقوف السيارات')),
                ('year_built', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2025)], verbose_name='سنة البناء')),
                ('market_value', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, verbose_name='القيمة السوقية')),
                ('minimum_bid', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, verbose_name='الحد الأدنى للمزايدة')),
                ('pricing_details', models.JSONField(blank=True, default=dict, help_text='تاريخ التسعير وتفاصيل أخرى', verbose_name='تفاصيل التسعير')),
                ('is_published', models.BooleanField(default=False, verbose_name='منشور')),
                ('is_featured', models.BooleanField(default=False, verbose_name='مميز')),
                ('is_verified', models.BooleanField(default=False, verbose_name='موثق')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='الرابط المختصر')),
                ('meta_title', models.CharField(blank=True, max_length=100, verbose_name='عنوان الميتا')),
                ('meta_description', models.TextField(blank=True, verbose_name='وصف الميتا')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='properties/covers/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'webp']), base.models.validate_image_size], verbose_name='صورة الغلاف')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='بيانات إضافية للواجهة الأمامية', verbose_name='بيانات إضافية')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_properties', to=settings.AUTH_USER_MODEL, verbose_name='المالك')),
            ],
            options={
                'verbose_name': 'عقار',
                'verbose_name_plural': 'العقارات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('notification_type', models.CharField(choices=[('auction_start', 'بدء المزاد'), ('auction_end', 'انتهاء المزاد'), ('outbid', 'تمت المزايدة بسعر أعلى'), ('bid_success', 'مزايدة ناجحة'), ('bid_failed', 'مزايدة فاشلة'), ('auction_won', 'تم الفوز بالمزاد'), ('payment_due', 'استحقاق الدفع'), ('payment_received', 'استلام الدفع'), ('message', 'رسالة جديدة'), ('document', 'تحديث الوثيقة'), ('system', 'إشعار نظام'), ('other', 'أخرى')], max_length=20, verbose_name='نوع الإشعار')),
                ('title', models.CharField(max_length=255, verbose_name='العنوان')),
                ('content', models.TextField(verbose_name='المحتوى')),
                ('channel', models.CharField(choices=[('app', 'داخل التطبيق'), ('email', 'بريد إلكتروني'), ('sms', 'رسالة نصية'), ('push', 'إشعار فوري'), ('all', 'جميع القنوات')], default='app', max_length=20, verbose_name='القناة')),
                ('is_read', models.BooleanField(default=False, verbose_name='مقروءة')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='وقت القراءة')),
                ('is_sent', models.BooleanField(default=False, verbose_name='تم الإرسال')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='وقت الإرسال')),
                ('action_url', models.CharField(blank=True, max_length=255, verbose_name='رابط الإجراء')),
                ('is_important', models.BooleanField(default=False, verbose_name='مهم')),
                ('expiry_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ انتهاء الصلاحية')),
                ('notification_data', models.JSONField(blank=True, default=dict, help_text='بيانات إضافية عن الإشعار', verbose_name='بيانات الإشعار')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='المستلم')),
                ('related_auction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='base.auction', verbose_name='المزاد المرتبط')),
                ('related_contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='base.contract', verbose_name='العقد المرتبط')),
                ('related_thread', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='base.messagethread', verbose_name='المحادثة المرتبطة')),
                ('related_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='base.property', verbose_name='العقار المرتبط')),
            ],
            options={
                'verbose_name': 'إشعار',
                'verbose_name_plural': 'الإشعارات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='messagethread',
            name='related_property',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='threads', to='base.property', verbose_name='العقار المرتبط'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('document_number', models.CharField(max_length=50, unique=True, verbose_name='رقم الوثيقة')),
                ('title', models.CharField(max_length=255, verbose_name='العنوان')),
                ('document_type', models.CharField(choices=[('deed', 'صك ملكية'), ('contract', 'عقد'), ('certificate', 'شهادة'), ('report', 'تقرير فحص'), ('identity', 'وثيقة هوية'), ('financial', 'وثيقة مالية'), ('other', 'أخرى')], max_length=20, verbose_name='نوع الوثيقة')),
                ('description', models.TextField(blank=True, verbose_name='الوصف')),
                ('file', models.FileField(help_text='تحميل ملف الوثيقة (PDF، Word، أو صور)', upload_to=base.models.document_file_path, validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])], verbose_name='ملف الوثيقة')),
                ('thumbnail', models.ImageField(blank=True, editable=False, null=True, upload_to='documents/thumbnails/', verbose_name='صورة مصغرة')),
                ('verification_status', models.CharField(choices=[('pending', 'قيد الانتظار'), ('verified', 'تم التحقق'), ('rejected', 'مرفوض')], default='pending', max_length=20, verbose_name='حالة التحقق')),
                ('verification_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ التحقق')),
                ('verification_notes', models.TextField(blank=True, verbose_name='ملاحظات التحقق')),
                ('verification_details', models.JSONField(blank=True, default=dict, help_text='تفاصيل إضافية عن عملية التحقق', verbose_name='تفاصيل التحقق')),
                ('issue_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الإصدار')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الانتهاء')),
                ('file_size', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='حجم الملف (كيلوبايت)')),
                ('page_count', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='عدد الصفحات')),
                ('content_type', models.CharField(blank=True, editable=False, max_length=100, verbose_name='نوع المحتوى')),
                ('document_metadata', models.JSONField(blank=True, default=dict, help_text='بيانات تفصيلية عن الوثيقة', verbose_name='بيانات الوثيقة')),
                ('is_public', models.BooleanField(default=False, verbose_name='متاح للجميع')),
                ('access_code', models.CharField(blank=True, max_length=50, verbose_name='رمز الوصول')),
                ('related_auction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='base.auction', verbose_name='المزاد المرتبط')),
                ('related_contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='base.contract', verbose_name='العقد المرتبط')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL, verbose_name='تم التحميل بواسطة')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL, verbose_name='تم التحقق بواسطة')),
                ('related_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='base.property', verbose_name='العقار المرتبط')),
            ],
            options={
                'verbose_name': 'وثيقة',
                'verbose_name_plural': 'الوثائق',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='related_property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contracts', to='base.property', verbose_name='العقار المرتبط'),
        ),
        migrations.AddField(
            model_name='auction',
            name='related_property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auctions', to='base.property', verbose_name='العقار المرتبط'),
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('alt_text', models.CharField(blank=True, max_length=255, verbose_name='النص البديل')),
                ('width', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='العرض')),
                ('height', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='الارتفاع')),
                ('file_size', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='حجم الملف (كيلوبايت)')),
                ('image', models.ImageField(upload_to=base.models.property_image_path, validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'webp']), base.models.validate_image_size], verbose_name='الصورة')),
                ('is_primary', models.BooleanField(default=False, verbose_name='صورة رئيسية')),
                ('caption', models.CharField(blank=True, max_length=255, verbose_name='التعليق')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='ترتيب العرض')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='معلومات إضافية عن الصورة مثل الموقع أو الغرفة', verbose_name='بيانات وصفية')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='base.property', verbose_name='العقار')),
            ],
            options={
                'verbose_name': 'صورة العقار',
                'verbose_name_plural': 'صور العقار',
                'ordering': ['order', '-is_primary', 'id'],
            },
        ),
        migrations.CreateModel(
            name='PropertyView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('view_type', models.CharField(choices=[('street', 'عرض الشارع'), ('satellite', 'عرض الأقمار الصناعية'), ('floor_plan', 'مخطط الطابق'), ('3d_model', 'نموذج ثلاثي الأبعاد'), ('virtual_tour', 'جولة افتراضية')], max_length=20, verbose_name='نوع العرض')),
                ('location', models.JSONField(blank=True, default=dict, help_text='بيانات الموقع في التصور', verbose_name='الموقع')),
                ('dimensions', models.JSONField(blank=True, default=dict, help_text='تفاصيل الأبعاد والمساحة', verbose_name='الأبعاد')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='العنوان')),
                ('legal_description', models.TextField(blank=True, verbose_name='الوصف القانوني')),
                ('size_sqm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='المساحة (متر مربع)')),
                ('elevation', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='الارتفاع')),
                ('image', models.ImageField(blank=True, null=True, upload_to='properties/views/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'webp']), base.models.validate_image_size], verbose_name='الصورة')),
                ('file', models.FileField(blank=True, help_text='تحميل مخططات الطوابق، ملفات CAD، إلخ.', null=True, upload_to='properties/views/files/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'dwg', 'dxf', 'svg'])], verbose_name='الملف')),
                ('external_url', models.URLField(blank=True, help_text='رابط للنموذج ثلاثي الأبعاد أو الجولة الافتراضية', verbose_name='رابط خارجي')),
                ('embed_code', models.TextField(blank=True, help_text='كود HTML لتضمين الجولة الافتراضية', verbose_name='كود التضمين')),
                ('view_config', models.JSONField(blank=True, default=dict, help_text='إعدادات وتكوين العرض', verbose_name='إعدادات العرض')),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_views', to='base.auction', verbose_name='المزاد')),
            ],
            options={
                'verbose_name': 'عرض العقار',
                'verbose_name_plural': 'عروض العقار',
                'ordering': ['view_type'],
            },
        ),
        migrations.CreateModel(
            name='ThreadParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('is_muted', models.BooleanField(default=False, verbose_name='صامت')),
                ('last_read_at', models.DateTimeField(blank=True, null=True, verbose_name='آخر قراءة')),
                ('custom_permissions', models.JSONField(blank=True, default=dict, verbose_name='صلاحيات مخصصة')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='thread_participants', to='accounts.role', verbose_name='دور المستخدم')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='base.messagethread', verbose_name='المحادثة')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_participations', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'مشارك في المحادثة',
                'verbose_name_plural': 'المشاركون في المحادثة',
            },
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('bid_amount', models.DecimalField(decimal_places=2, max_digits=14, verbose_name='مبلغ المزايدة')),
                ('bid_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='وقت المزايدة')),
                ('status', models.CharField(choices=[('pending', 'قيد الانتظار'), ('accepted', 'مقبول'), ('rejected', 'مرفوض'), ('cancelled', 'ملغي'), ('outbid', 'تمت المزايدة بأعلى'), ('winning', 'فائز')], default='pending', max_length=20, verbose_name='الحالة')),
                ('is_auto_bid', models.BooleanField(default=False, verbose_name='مزايدة تلقائية')),
                ('max_auto_bid', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True, verbose_name='الحد الأقصى للمزايدة التلقائية')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='عنوان IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='وكيل المستخدم')),
                ('notes', models.TextField(blank=True, verbose_name='ملاحظات')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='بيانات إضافية عن المزايدة', verbose_name='بيانات إضافية')),
                ('payment_info', models.JSONField(blank=True, default=dict, help_text='معلومات عن حالة الدفع والتأمين للمزايدة', verbose_name='معلومات الدفع')),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='base.auction', verbose_name='المزاد')),
                ('bidder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to=settings.AUTH_USER_MODEL, verbose_name='المزايد')),
            ],
            options={
                'verbose_name': 'مزايدة',
                'verbose_name_plural': 'المزايدات',
                'ordering': ['-bid_time'],
                'indexes': [models.Index(fields=['auction', '-bid_time'], name='base_bid_auction_9a6bc0_idx'), models.Index(fields=['bidder', '-bid_time'], name='base_bid_bidder__5efcb2_idx'), models.Index(fields=['status'], name='base_bid_status_76911a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('content', models.TextField(verbose_name='المحتوى')),
                ('message_type', models.CharField(choices=[('text', 'نص'), ('image', 'صورة'), ('file', 'ملف'), ('location', 'موقع'), ('system', 'رسالة نظام')], default='text', max_length=20, verbose_name='نوع الرسالة')),
                ('status', models.CharField(choices=[('sending', 'جاري الإرسال'), ('sent', 'تم الإرسال'), ('delivered', 'تم التسليم'), ('read', 'تمت القراءة'), ('failed', 'فشل الإرسال'), ('deleted', 'محذوفة')], default='sent', max_length=20, verbose_name='الحالة')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='messages/attachments/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif', 'pdf', 'doc', 'docx', 'xls', 'xlsx', 'zip'])], verbose_name='المرفق')),
                ('attachment_type', models.CharField(blank=True, max_length=100, verbose_name='نوع المرفق')),
                ('attachment_name', models.CharField(blank=True, max_length=255, verbose_name='اسم المرفق')),
                ('attachment_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='حجم المرفق')),
                ('sent_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='وقت الإرسال')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='وقت التسليم')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='وقت القراءة')),
                ('is_system_message', models.BooleanField(default=False, verbose_name='رسالة نظام')),
                ('is_important', models.BooleanField(default=False, verbose_name='مهمة')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='بيانات وصفية')),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='base.message', verbose_name='رد على')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_messages', to=settings.AUTH_USER_MODEL, verbose_name='المرسل')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='base.messagethread', verbose_name='المحادثة')),
            ],
            options={
                'verbose_name': 'رسالة',
                'verbose_name_plural': 'الرسائل',
                'ordering': ['sent_at'],
                'indexes': [models.Index(fields=['thread', 'sent_at'], name='base_messag_thread__894666_idx'), models.Index(fields=['sender', 'sent_at'], name='base_messag_sender__81f913_idx'), models.Index(fields=['status'], name='base_messag_status_f24039_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['property_number'], name='base_proper_propert_bc4cff_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['status'], name='base_proper_status_3074c3_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['property_type'], name='base_proper_propert_3a2f42_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['city'], name='base_proper_city_480b4d_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['is_published', 'is_featured'], name='base_proper_is_publ_39d83f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', '-created_at'], name='base_notifi_recipie_43fdd4_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='base_notifi_notific_39da70_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['is_read'], name='base_notifi_is_read_d15f75_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['is_sent'], name='base_notifi_is_sent_9978f0_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['uuid'], name='base_messag_uuid_8b7ec2_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['thread_type'], name='base_messag_thread__89bea9_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['status'], name='base_messag_status_504f94_idx'),
        ),
        migrations.AddIndex(
            model_name='messagethread',
            index=models.Index(fields=['-last_message_at'], name='base_messag_last_me_6adfcd_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['document_number'], name='base_docume_documen_970ed7_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['document_type'], name='base_docume_documen_cf6504_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['verification_status'], name='base_docume_verific_6a9466_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['contract_number'], name='base_contra_contrac_f7b68c_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['status'], name='base_contra_status_106703_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['contract_date'], name='base_contra_contrac_9a976b_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['buyer'], name='base_contra_buyer_i_a97232_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['seller'], name='base_contra_seller__ccf9ec_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['uuid'], name='base_auctio_uuid_126888_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['status'], name='base_auctio_status_61d8eb_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['start_date'], name='base_auctio_start_d_11ebd5_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['end_date'], name='base_auctio_end_dat_02e6a0_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['is_published', 'is_featured'], name='base_auctio_is_publ_c65830_idx'),
        ),
        migrations.AddIndex(
            model_name='threadparticipant',
            index=models.Index(fields=['is_active'], name='base_thread_is_acti_25310d_idx'),
        ),
        migrations.AddIndex(
            model_name='threadparticipant',
            index=models.Index(fields=['user', 'is_active'], name='base_thread_user_id_3454fa_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='threadparticipant',
            unique_together={('thread', 'user')},
        ),
    ]
